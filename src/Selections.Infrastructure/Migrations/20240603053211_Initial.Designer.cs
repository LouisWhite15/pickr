// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Selections.Infrastructure;

#nullable disable

namespace Selections.Infrastructure.Migrations
{
    [DbContext(typeof(SelectionsContext))]
    [Migration("20240603053211_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("selections")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Selections.Domain.Aggregates.SelectionAggregate.Selection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("selections", "selections");
                });

            modelBuilder.Entity("Selections.Domain.Aggregates.SelectionAggregate.SelectionItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("SelectionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SelectionId");

                    b.ToTable("selectionItems", "selections");
                });

            modelBuilder.Entity("Selections.Domain.Aggregates.SelectionAggregate.SelectionItem", b =>
                {
                    b.HasOne("Selections.Domain.Aggregates.SelectionAggregate.Selection", null)
                        .WithMany("Items")
                        .HasForeignKey("SelectionId");
                });

            modelBuilder.Entity("Selections.Domain.Aggregates.SelectionAggregate.Selection", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
